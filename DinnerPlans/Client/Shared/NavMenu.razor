@using DinnerPlans.Client.Services.IServices
@inject IShoppingListService ShoppingListService
@implements IDisposable
<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All">Home</MudNavLink>
    <MudNavLink Href="userrecipelist" Match="NavLinkMatch.Prefix">My Recipes</MudNavLink>
    <MudNavLink Href="recipelist" Match="NavLinkMatch.Prefix">Suggested Recipes</MudNavLink>
    <MudBadge Content="this.ShoppingListService.GetCount()" Overlap="false" Origin="Origin.CenterRight">
       
        <MudNavLink Href="shoppinglist" Match="NavLinkMatch.Prefix">Shopping List</MudNavLink>
    </MudBadge>
    <MudNavLink Href="storeLookup" Match="NavLinkMatch.Prefix">Store Lookup</MudNavLink>
    <MudNavGroup Title="Settings" Expanded="false">
        <MudSwitch Color="Color.Primary" @bind-Checked="ThemeProvider.IsDarkMode">Dark Mode</MudSwitch>
        <MudNavLink Href="/security" Match="NavLinkMatch.Prefix">TODO</MudNavLink>
    </MudNavGroup>
    <MudNavLink Href="about"  Match="NavLinkMatch.Prefix">About</MudNavLink>
</MudNavMenu>

@code 
{
    [CascadingParameter]
    protected MudThemeProvider ThemeProvider { get; set; }

    protected override void OnInitialized()
        => this.ShoppingListService.ItemsChanged += this.OnItemsChanged;

    private void OnItemsChanged(object? sender, EventArgs e)
        => this.InvokeAsync(StateHasChanged);
    public void Dispose()
        => this.ShoppingListService.ItemsChanged -= this.OnItemsChanged;

}

